package com.Study7;

/**
 * ClassName Study7_4
 *
 * @Date2025/2/2819:48
 * @Create bysunlight
 */
public class Study7_4 {


    /**
     * 接口：
     *    1.接口用关键字interface来定义
     *    2.接口不能实例化
     *    3.接口和类之间是实现关系，通过implements关键字表示
     *          public class 类名 implements 接口名{}
     *    4.接口的子类：
     *          1.要么重写接口中的所有抽象方法
     *          2.要么是抽象类
     *    5.接口和类的实现关系，可以单实现，也可以多实现
     *    6.实现类还可以再继承一个类的同时实现多个接口
     *
     *
     *
     * JDK8以后接口新增的方法：
     *      一、1.允许在接口中定义默认的方法，需要使用关键字default修饰
     *      作用：解决接口升级的问题
     *      2.接口中默认方法的定义格式：
     *          public default 返回值类型 方法名(参数列表){}
     *      3.接口中默认方法的注意事项：
     *          1.默认方法不是抽象方法，所以不强制被重写，但是如果被重写，重写的时候去掉default关键字
     *          2.public是默认修饰符，可以省略，但是default不可以省略
     *          3.如果实现了多个接口，多个接口中存在相同名字的默认方法，子类就必须对该方法进行重写
     *
     *      二、
     *      1.允许在接口中定义静态方法，需要使用static修饰
     *      2.接口中静态方法的定义格式：
     *          格式: public static 返回值类型 方法名(参数列表){}
     *      3.接口中静态方法的注意事项：
     *          1.静态方法只能通过接口名调用，不能通过实现类名或者对象名调用,不需要重写
     *          2.public可以省略，static不能省略
     *
     *
     * 适配器模式：
     *      1.当一个接口中抽象方法过多，但是我只要使用其中一部分的时候，就可以使用适配器设计模式
     *      2.书写步骤：
     *          1.编写中间类 XXXAdapter,实现对应的接口
     *          2.对接口中的抽象方法进行空实现
     *          3.让真正的实现类继承中间类，并重写需要的方法
     *          4.为了避免其他类创建适配器类的对象，中间的适配类用abstract进行修饰
     */

}
